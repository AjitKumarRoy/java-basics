//Linear Search in 2-D array

import java.util.*;
import java.util.Arrays;

public class Ajit{
    public static void main(String[] args){
        //2-D array declared and initialized
        int[][] nums = {
                {23, 23, 2, 53},
                {-1, 3},
                {34, -3, 0},
                {3, 10, 1, 1}
        };

        //target to be searched in array
        int target = 11;

        int[] ans = LinearSearch(nums, target);//LinearSearch function called

        //required output
        System.out.println(Arrays.toString(ans));
    }

    //function to linearly search for a target in the 2-D array
    public static int[] LinearSearch(int[][] arr, int target){

        //this block of code will only execute when the given 2-D array has 0 elements in it
        if(arr.length == 0){
            return new int[] {-1,-1};
        }

        //for loop to iterate over every element of the 2-D array
        for(int row = 0; row < arr.length; row++){
            for(int col = 0; col < arr[row].length; col++){

                //check if the element at every index is equal to the target
                if(arr[row][col] == target){

                    //if the current element equal to the target is found, then it's index will be returned
                    return new int[] {row,col};
                }
            }
        }

        //if none of the above return statements is executed, then only this return statement will execute
        //hence, the target is not found
        return new int[] {-1,-1};
        //we are returning {-1,-1} because -ve index doesn't exist in an array
    }
}